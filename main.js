!function(){"use strict";class e{constructor(e){let{name:t,link:s}=e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:".card",i=arguments.length>2?arguments[2]:void 0;this._name=t,this._link=s,this._cardSelector=n,this._handleImageClick=i,this._cardSelectors={name:`${n}__name`,image:`${n}__image`,likeButton:`${n}__like-btn`,deleteButton:`${n}__delete-btn`},this.init()}_likeButtonHandler=e=>{e.target.classList.toggle("card__like-btn_mode_liked")};_deleteButtonHandler=e=>{e.target.closest(this._cardSelector).remove()};_setEventListeners=()=>{this._likeButton.addEventListener("click",this._likeButtonHandler),this._deleteButton.addEventListener("click",this._deleteButtonHandler),this._imageElement.addEventListener("click",(()=>{this._handleImageClick(this)}))};init=()=>(this._cardElement=document.querySelector("#card-template").content.querySelector(this._cardSelector).cloneNode(!0),this._likeButton=this._cardElement.querySelector(this._cardSelectors.likeButton),this._deleteButton=this._cardElement.querySelector(this._cardSelectors.deleteButton),this._imageElement=this._cardElement.querySelector(this._cardSelectors.image),this._nameElement=this._cardElement.querySelector(this._cardSelectors.name),this._imageElement.alt=this._name,this._imageElement.src=this._link,this._nameElement.textContent=this._name,this._setEventListeners(),this._cardElement);getCard=()=>({name:this._name,link:this._link,element:this._cardElement})}const t=new class{constructor(e){let{nameElement:t,jobElement:s}=e;this._nameElement=t,this._jobElement=s}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e){let{name:t,job:s}=e;this._nameElement.textContent=t,this._jobElement.textContent=s}}({nameElement:document.querySelector(".profile__name"),jobElement:document.querySelector(".profile__job")});class s{constructor(e){let{popupSelector:t}=e;this._popup=document.querySelector(t),this._popupExitButton=this._popup.querySelector(".popup__exit-btn"),this._isOpened=!1,this._popupContainerClass="popup",this._openedPopupClass="popup_opened"}open(){this._popup.classList.add(this._openedPopupClass),document.addEventListener("keydown",this._handleEscClose),this._isOpened=!0}close(){this._popup.classList.remove(this._openedPopupClass),document.removeEventListener("keydown",this._handleEscClose),this._isOpened=!1}toggle(){this._popup.classList.toggle(this._openedPopupClass),this._isOpened=!this._isOpened}_handleEscClose=e=>{"Escape"==e.key&&this._isOpened&&this.close()};_handleBackdropClose=e=>{e.target.classList.contains(this._popupContainerClass)&&this.close()};setEventListeners(){this._popup.addEventListener("click",this._handleBackdropClose),this._popupExitButton.addEventListener("click",(()=>{this.close()}))}}class n extends s{constructor(e,t){let{popupSelector:s}=e;super({popupSelector:s}),this._submitCallback=t,this._formElement=this._popup.querySelector(".popup__form"),this._formInputSelector=".form__input",this._inputElements=Array.from(this._popup.querySelectorAll(this._formInputSelector))}_getInputValues=()=>{const e={};return this._inputElements.forEach((t=>{e[t.id]=t.value})),e};setInputValues(e){this._inputElements.forEach((t=>{t.value=e[t.id]}))}getForm(){return this._formElement}setEventListeners=()=>{super.setEventListeners(),this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this._submitCallback(this._getInputValues()),this._formElement.reset(),this.close()}))}}class i{constructor(e,t){this._config=e,this._formElement=t,this._submitButtonElement=t.querySelector(e.submitButtonSelector),this._inputList=t.querySelectorAll(this._config.inputSelector)}_isInputValid=e=>!e.validity.valid;_hasInvalidInput=()=>Array.from(this._inputList).some((e=>this._isInputValid(e)));_showInputError=(e,t)=>{const s=this._formElement.querySelector(this._config.errorInputPrefixSelector+e.id);s.textContent=t,s.classList.add(this._config.errorClass),e.classList.add(this._config.inputErrorClass)};_hideInputError=e=>{this._formElement.querySelector(this._config.errorInputPrefixSelector+e.id).classList.remove(this._config.errorClass),e.classList.remove(this._config.inputErrorClass)};disableSubmitButton(){arguments.length>0&&void 0!==arguments[0]&&!arguments[0]?(this._submitButtonElement.classList.remove(this._config.inactiveButtonClass),this._submitButtonElement.removeAttribute("disabled")):(this._submitButtonElement.classList.add(this._config.inactiveButtonClass),this._submitButtonElement.setAttribute("disabled",""))}reset=()=>{this._formElement.reset()};hideInputErrors(){this._inputList.forEach((e=>this._hideInputError(e)))}getFormElement(){return this._formElement}_toggleButtonState=()=>{const e=this._hasInvalidInput();this.disableSubmitButton(e)};_checkInputValidity=e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)};_setEventListeners=()=>{this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))};enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this.disableSubmitButton()})),this._setEventListeners()}}const o=new class extends s{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._image=this._popup.querySelector(".popup__image"),this._imageCaption=this._popup.querySelector(".popup__place-name")}open(e){let{name:t,url:s}=e;this._imageCaption.textContent=t,this._image.alt=t,this._image.src=s,super.open()}}({popupSelector:".popup--open-image"}),r=new n({popupSelector:".popup--edit-profile"},(e=>t.setUserInfo({name:e.name,job:e.job}))),a=document.querySelector(".profile__add-button"),l=document.querySelector(".profile__edit-name-button");function c(t){return new e(t,".card",(()=>{o.open({name:t.name,url:t.link})})).getCard().element}const u=new class{constructor(e,t){let{items:s,renderer:n}=e;this._renderedItems=s,this._renderer=n,this._container=document.querySelector(t)}addItem(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"prepend";this._container[t](e)}clear(){this._container.innerHTML=""}renderItems(){this._renderedItems.forEach((e=>this._renderer(e)))}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=c(e);u.addItem(t)}},".gallery"),p=new n({popupSelector:".popup--new-place"},(e=>{u.addItem(c({name:e["place-name"],link:e["place-url"]}))})),m={};var _;_={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__submit",errorInputPrefixSelector:".form__input-error_",inactiveButtonClass:"form__submit_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"},Array.from(document.forms).forEach((e=>{const t=e.getAttribute("name"),s=new i(_,e);m[t]=s,s.enableValidation()})),o.setEventListeners(),p.setEventListeners(),r.setEventListeners(),a.addEventListener("click",(()=>{p.open()})),l.addEventListener("click",(()=>{r.setInputValues({name:t.getUserInfo().name,job:t.getUserInfo().job}),r.open()})),u.renderItems()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,